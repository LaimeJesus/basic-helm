apiVersion: apps/v1
kind: Deployment
metadata:
    # annotations:
    #     io.rancher.container.pull_image: always
    #     kompose.cmd: ./migration-tools-0.1.3 parse --docker-file export/scanterra.PROD/kobotoolbox/docker-compose.yml
    #         --rancher-file export/scanterra.PROD/kobotoolbox/rancher-compose.yml --output-file
    #         parse2-kobotoolbox.PROD
    #     kompose.version: 1.21.0 (992df58d8)
    # creationTimestamp: null
    labels:
        io.kompose.service: redis-main
    name: redis-main
spec:
    replicas: 1
    selector:
        matchLabels:
            io.kompose.service: redis-main
    strategy:
        type: Recreate
    template:
        metadata:
            # annotations:
            #     io.rancher.container.pull_image: always
            #     kompose.cmd: ./migration-tools-0.1.3 parse --docker-file export/scanterra.PROD/kobotoolbox/docker-compose.yml
            #         --rancher-file export/scanterra.PROD/kobotoolbox/rancher-compose.yml
            #         --output-file parse2-kobotoolbox.PROD
            #     kompose.version: 1.21.0 (992df58d8)
            # creationTimestamp: null
            labels:
                io.kompose.service: redis-main
        spec:
            containers:
              - image: scanterra/kobotoolbox_redis_main:2.6
                imagePullPolicy: Always
                name: redis-main
                resources: {}
                volumeMounts:
                  - mountPath: /data/
                    name: kobotoolbox-vols-redismaindata
            restartPolicy: Always
            serviceAccountName: ""
            volumes:
              - name: kobotoolbox-vols-redismaindata
                persistentVolumeClaim:
                    claimName: kobotoolbox-vols-redismaindata
status: {}
