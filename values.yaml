# Default values for kobotoolbox.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: "kobotoolbox-app"
fullnameOverride: "kobotoolbox"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "kobotoolbox-user"

# Rancher Charts no soporta array field: https://github.com/rancher/rancher/issues/24918
imagePullSecrets: dockerhub
restartPolicy: Always
imagePullPolicy: Always
serviceAccountName: ""

services:
  kpi:
    image: scanterra/kobotoolbox_kpi:develop
    deploy: true
    envs: true
    initContainers:
      - name: init-postgres
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for postgres; sleep 2; done"]
    ports:
      default: 8000
    volumes:
      kobotoolbox-vols-static-kpi: /srv/static
      kobotoolbox-vols-kpimedia: /srv/src/kpi/media
      kobotoolbox-vols-whoosh: /srv/whoosh
      kobotoolbox-log-kpi: /srv/logs
      kobotoolbox-vols-kobocatmedia: /srv/src/kobocat/media
  kobocat:
    image: scanterra/kobotoolbox_kobocat:2.018.31
    deploy: true
    envs: true
    initContainers:
      - name: init-postgres
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for postgres; sleep 2; done"]
      - name: init-kpi
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup kpi.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for kpi; sleep 5; done"]
    ports:
      default: 8000
    volumes:
      kobotoolbox-vols-static-kobocat: /srv/static
      kobotoolbox-vols-kobocatmedia: /srv/src/kobocat/media
      kobotoolbox-backups-kobocat: /srv/backups
      kobotoolbox-log-kobocat: /srv/logs
  enketo-express:
    image: scanterra/kobotoolbox_enketo_express:k8-deploy
    deploy: true
    envs: true
    ports:
      default: 8005
  nginx:
    image: scanterra/kobotoolbox_nginx:k8-deploy
    deploy: true
    envs: true
    ports:
      kpi: 9000
      kobocat: 9001
      enketo-express: 9005
    volumes:
      kobotoolbox-vols-static-kobocat: /srv/www/kobocat
      kobotoolbox-vols-static-kpi: /srv/www/kpi
      kobotoolbox-vols-kpimedia: /srv/src/kpi/media
      kobotoolbox-log-nginx: /var/log/nginx
      kobotoolbox-secrets: /tmp/kobo_toolbox_secrets/
  db-backup:
    image: scanterra/pg-backup:9.6
    deploy: true
    envs: true
    volumes:
      kobotoolbox-backups-postgres: /backups
  mongo-btsync:
    image: scanterra/btsync:rancher
    deploy: true
    envs: true
    volumes:
      kobotoolbox-backups-mongo: /web
  mongo:
    image: scanterra/kobotoolbox_mongo:latest
    deploy: true
    envs: true
    ports:
      default: 27017
    volumes:
      kobotoolbox-vols-mongo: /srv/db
      kobotoolbox-backups-mongo: /srv/backups
  postgres:
    image: scanterra/postgis:9.6-2.4
    deploy: true
    envs: true
    ports:
      default: 5432
    volumes:
      kobotoolbox-vols-db: /var/lib/postgresql
      kobotoolbox-backups-postgres: /srv/backups
  kobocat-btsync:
    image: scanterra/btsync:rancher
    deploy: true
    envs: true
    volumes:
      kobotoolbox-backups-kobocat: /web
  kobo-postgres-btsync:
    image: scanterra/btsync:rancher
    deploy: true
    envs: true
    volumes:
      kobotoolbox-backups-postgres: /web
  rabbit:
    image: scanterra/kobotoolbox_rabbit:latest
    deploy: true
    envs: true
    ports:
      default: 5672
    volumes:
      kobotoolbox-log-rabbitmq: /var/log/rabbitmq
  redis-cache:
    image: scanterra/kobotoolbox_redis_cache:2.6
    deploy: true
    ports:
      default: 6379
  redis-main:
    image: scanterra/kobotoolbox_redis_main:2.6
    deploy: true
    ports:
      default: 6379
    volumes:
      kobotoolbox-vols-redismaindata: /data/
  smtp:
    image: catatnight/postfix
    deploy: true
    envs: true
    ports:
      default: 25
  borg-backup-service:
    image: lucernae/borgbackup:1.1.8
    deploy: true
    envs: true
  borg-backup-service-server:
    image: lucernae/borgbackup:1.1.8
    deploy: true
    envs: true
    volumes:
      kobotoolbox-borg-users-home: /root
      kobotoolbox-borg-repo: /borg/repo
      kobotoolbox-borg-cache: /root/.cache/borg
      kobotoolbox-vols-kobocatmedia: /borg/data/kobocatmedia
      kobotoolbox-vols-kpimedia: /borg/data/kpimedia
      kobotoolbox-backups-postgres: /borg/data/rawbackups/postgres
      kobotoolbox-backups-mongo: /borg/data/rawbackups/mongo

volumeClaims:
  storageClass: "manual"
  accessMode: "ReadWriteOnce"
  definitions:
    kobotoolbox-backups-kobocat: "100Mi"
    kobotoolbox-backups-mongo: "100Mi"
    kobotoolbox-backups-postgres: 100Mi"
    kobotoolbox-log-kobocat: 100Mi"
    kobotoolbox-log-kpi: "100Mi"
    kobotoolbox-log-nginx: "100Mi"
    kobotoolbox-log-rabbitmq": "100Mi"
    kobotoolbox-secrets: 100Mi"
    kobotoolbox-vols-db: "1Gi"
    kobotoolbox-vols-kobocatmedia: "100Mi"
    kobotoolbox-vols-kpimedia: "100Mi"
    kobotoolbox-vols-mongo: "100Mi"
    kobotoolbox-vols-redismaindata: "100Mi"
    kobotoolbox-vols-static-kobocat: "100Mi"
    kobotoolbox-vols-static-kpi: "100Mi"
    kobotoolbox-vols-whoosh: "100Mi"

# envs
ENKETO_API_TOKEN: enketoapitoken
DJANGO_SECRET_KEY: "DJANGO_SECRET_KEY"
KOBO_SUPERUSER_USERNAME: "kobo_superadmin"
KOBO_SUPERUSER_PASSWORD: "KOBO_SUPERUSER_PASSWORD"
PGHOST: postgres
PGPASSWORD: PGPASSWORD
POSTGRES_HOST: "postgres"
POSTGRES_PORT: 5432
POSTGRES_USER: "kobo_superadmin"
POSTGRES_PASSWORD: "j3cA6eCIneo5nU5qjK8yXycalu9B2I41"
POSTGRES_DBNAME: kobotoolbox
KOBO_SUPPORT_EMAIL: "soporte@scanterra.com"
PUBLIC_DOMAIN_NAME: "scanterra.com"
WEBSERVER_PORT: 82
KOBOTOOLBOX_PROTOCOL: https
PROXY_WEB_SERVER: uWSGI
KOBOFORM_PUBLIC_SUBDOMAIN: "cloneprod.scancollect-form-edit"
KOBOCAT_PUBLIC_SUBDOMAIN: "cloneprod.scancollect"
ENKETO_EXPRESS_PUBLIC_SUBDOMAIN: "cloneprod.scancollect-form"
USE_EXTERNAL_SMTP: false
EMAIL_HOST: smtp
EMAIL_PORT: 25
EMAIL_HOST_USER: noreply
EMAIL_HOST_PASSWORD: docker
EMAIL_USE_TLS: 'False'
BORG_BACKUP_FREQUENCY: '0 */5 * * *'
BORG_PASSPHRASE: 'kobotoolboxincrementalbackup'
POSTGRES_BACKUP_SCHEDULE: '0 2 * * 0'
MONGO_BACKUP_SCHEDULE: '0 1 * * 0'
KOBOCAT_MEDIA_BACKUP_SCHEDULE: '0 0 * * 0'
USE_ENV_VAR: true
KOBOFORM_SERVER_NAME: "cloneprod.scancollect-form-edit.scanterra.com"
KOBOCAT_SERVER_NAME: "cloneprod.scancollect.scanterra.com"
ENKETO_SERVER_NAME: "cloneprod.scancollect-form.scanterra.com"
CSRF_COOKIE_DOMAIN: ".scanterra.com"
DJANGO_ALLOWED_HOSTS: ".scanterra.com"
TASK_SOFT_TIMEOUT: 7200
TASK_TIMEOUT: 9000
USE_CUSTOM_KOBOCAT: false
CUSTOM_KOBOCAT_THEME_APP_PIP_URL: "git+https://git@github.com/scanterra/custom_kobocat_theme.git@develop"
CUSTOM_KOBOCAT_DJANGO_SETTINGS_MODULE: "custom_kobocat_theme.settings"
CUSTOM_KOBOCAT_PYTHONPATH: "/srv/src/kobocat:/srv/src/custom_kobocat_theme"
ARCHIVE_FILENAME: /backups/postgres_backup
DUMPPREFIX: postgres_backup

MONGO_BACKUP_ARCHIVE_FILENAME: mongo_backup.mongorestore.tar.gz
MONGO_DATA: /srv/db
POSTGRES_BACKUP_ARCHIVE_FILENAME: postgres_backup_kobotoolbox.pg_restore

KOBOCAT_BROKER_URL: amqp://kobocat:kobocat@rabbit:5672/kobocat
KOBOCAT_DJANGO_DEBUG: False

KPI_BROKER_URL: amqp://kpi:kpi@rabbit:5672/kpi
KPI_DJANGO_DEBUG: False
KPI_PREFIX: /

DJANGO_LANGUAGE_CODES: en fr es ar zh-hans hi ku
