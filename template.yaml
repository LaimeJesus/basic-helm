---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backups-kobocat
spec:
  storageClassName: manual
  volumeName: backups-kobocat
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backups-mongo
spec:
  storageClassName: manual
  volumeName: backups-mongo
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backups-postgres
spec:
  storageClassName: manual
  volumeName: backups-postgres
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: log-kobocat
spec:
  storageClassName: manual
  volumeName: log-kobocat
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: log-kpi
spec:
  storageClassName: manual
  volumeName: log-kpi
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: log-nginx
spec:
  storageClassName: manual
  volumeName: log-nginx
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: log-rabbitmq
spec:
  storageClassName: manual
  volumeName: log-rabbitmq
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: secrets
spec:
  storageClassName: manual
  volumeName: secrets
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vols-db
spec:
  storageClassName: manual
  volumeName: vols-db
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vols-kobocatmedia
spec:
  storageClassName: manual
  volumeName: vols-kobocatmedia
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vols-kpimedia
spec:
  storageClassName: manual
  volumeName: vols-kpimedia
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vols-mongo
spec:
  storageClassName: manual
  volumeName: vols-mongo
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vols-redismaindata
spec:
  storageClassName: manual
  volumeName: vols-redismaindata
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vols-static-kobocat
spec:
  storageClassName: manual
  volumeName: vols-static-kobocat
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vols-static-kpi
spec:
  storageClassName: manual
  volumeName: vols-static-kpi
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/persistentvolumeclaims.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vols-whoosh
spec:
  storageClassName: manual
  volumeName: vols-whoosh
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: basic-test/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: enketo-express
  name: enketo-express
spec:
  selector:
    io.kompose.service: enketo-express
  ports:
    - name: default
      port: 8005
      targetPort: 8005
---
# Source: basic-test/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: kobocat
  name: kobocat
spec:
  selector:
    io.kompose.service: kobocat
  ports:
    - name: default
      port: 8000
      targetPort: 8000
---
# Source: basic-test/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: kpi
  name: kpi
spec:
  selector:
    io.kompose.service: kpi
  ports:
    - name: default
      port: 8000
      targetPort: 8000
---
# Source: basic-test/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  selector:
    io.kompose.service: mongo
  ports:
    - name: default
      port: 27017
      targetPort: 27017
---
# Source: basic-test/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: nginx
  name: nginx
spec:
  selector:
    io.kompose.service: nginx
  ports:
    - name: enketo-express
      port: 9005
      targetPort: 9005
    - name: kobocat
      port: 9001
      targetPort: 9001
    - name: kpi
      port: 9000
      targetPort: 9000
---
# Source: basic-test/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  selector:
    io.kompose.service: postgres
  ports:
    - name: default
      port: 5432
      targetPort: 5432
---
# Source: basic-test/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: rabbit
  name: rabbit
spec:
  selector:
    io.kompose.service: rabbit
  ports:
    - name: default
      port: 5672
      targetPort: 5672
---
# Source: basic-test/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: redis-cache
  name: redis-cache
spec:
  selector:
    io.kompose.service: redis-cache
  ports:
    - name: default
      port: 6379
      targetPort: 6379
---
# Source: basic-test/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: redis-main
  name: redis-main
spec:
  selector:
    io.kompose.service: redis-main
  ports:
    - name: default
      port: 6379
      targetPort: 6379
---
# Source: basic-test/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: smtp
  name: smtp
spec:
  selector:
    io.kompose.service: smtp
  ports:
    - name: default
      port: 25
      targetPort: 25
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: borg-backup-service
  name: borg-backup-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: borg-backup-service
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: borg-backup-service
    spec:
      containers:
      - name: borg-backup-service
        image: lucernae/borgbackup:1.1.8
        imagePullPolicy: Always
        env:
          - name: ARCHIVE_PREFIX
            value: kobotoolbox
          - name: BACKUP_FROM
            value: /borg/data
          - name: BACKUP_WHAT
            value: .
          - name: BORG_PASSPHRASE
            value: kobotoolboxincrementalbackup
          - name: BORG_REPO
            value: /borg/repo
          - name: COMPRESSION
            value: lz4
          - name: KEEP_DAILY
            value: "7"
          - name: KEEP_MONTHLY
            value: "12"
          - name: KEEP_WEEKLY
            value: "4"
          - name: KEEP_YEARLY
            value: "1"
          - name: PRUNE
            value: "1"
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: borg-backup-service-server
  name: borg-backup-service-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: borg-backup-service-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: borg-backup-service-server
    spec:
      containers:
      - name: borg-backup-service-server
        image: lucernae/borgbackup:1.1.8
        imagePullPolicy: Always
        env:
          - name: ARCHIVE_PREFIX
            value: kobotoolbox
          - name: BORG_PASSPHRASE
            value: kobotoolboxincrementalbackup
          - name: BORG_RELOCATED_REPO_ACCESS_IS_OK
            value: "yes"
          - name: BORG_REPO
            value: /borg/repo
          - name: USERS
            value: root
        volumeMounts:
          - mountPath: /borg/data/rawbackups/mongo
            name: backups-mongo
          - mountPath: /borg/data/rawbackups/postgres
            name: backups-postgres
          - mountPath: /root/.cache/borg
            name: borg-cache
          - mountPath: /borg/repo
            name: borg-repo
          - mountPath: /root
            name: borg-users-home
          - mountPath: /borg/data/kobocatmedia
            name: vols-kobocatmedia
          - mountPath: /borg/data/kpimedia
            name: vols-kpimedia
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: backups-mongo
          persistentVolumeClaim:
            claimName: backups-mongo
        - name: backups-postgres
          persistentVolumeClaim:
            claimName: backups-postgres
        - name: borg-cache
          persistentVolumeClaim:
            claimName: borg-cache
        - name: borg-repo
          persistentVolumeClaim:
            claimName: borg-repo
        - name: borg-users-home
          persistentVolumeClaim:
            claimName: borg-users-home
        - name: vols-kobocatmedia
          persistentVolumeClaim:
            claimName: vols-kobocatmedia
        - name: vols-kpimedia
          persistentVolumeClaim:
            claimName: vols-kpimedia
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: db-backup
  name: db-backup
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db-backup
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: db-backup
    spec:
      containers:
      - name: db-backup
        image: scanterra/pg-backup:9.6
        imagePullPolicy: Always
        env:
          - name: ARCHIVE_FILENAME
            value: /backups/postgres_backup
          - name: DUMPPREFIX
            value: postgres_backup
          - name: PGHOST
            value: postgres
          - name: PGPASSWORD
            value: j3cA6eCIneo5nU5qjK8yXycalu9B2I41
          - name: PGPORT
            value: 5432
          - name: PGUSER
            value: kobo_superadmin
          - name: POSTGRES_DBNAME
            value: kobotoolbox
          - name: POSTGRES_HOST
            value: postgres
          - name: POSTGRES_PASSWORD
            value: j3cA6eCIneo5nU5qjK8yXycalu9B2I41
          - name: POSTGRES_PORT
            value: 5432
          - name: POSTGRES_USER
            value: kobo_superadmin
          - name: WITH_POSTGIS
            value: "1"
        volumeMounts:
          - mountPath: /backups
            name: backups-postgres
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: backups-postgres
          persistentVolumeClaim:
            claimName: backups-postgres
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: enketo-express
  name: enketo-express
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: enketo-express
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: enketo-express
    spec:
      containers:
      - name: enketo-express
        image: scanterra/kobotoolbox_enketo_express:k8-deploy
        imagePullPolicy: Always
        env:
            # apps
          - name: KOBO_SUPERUSER_USERNAME
            value: kobo_superadmin
          - name: KOBO_SUPERUSER_PASSWORD
            value: KOBO_SUPERUSER_PASSWORD
          - name: KOBO_SUPPORT_EMAIL
            value: soporte@scanterra.com
          - name: USE_ENV_VAR
            value: true
          - name: KOBOFORM_URL
            value: https://cloneprod.scancollect-form-edit.scanterra.com
          - name: KOBOCAT_URL
            value: https://cloneprod.scancollect.scanterra.com
          - name: ENKETO_URL
            value: https://cloneprod.scancollect-form.scanterra.com
          - name: CSRF_COOKIE_DOMAIN
            value: .scanterra.com
          - name: DJANGO_ALLOWED_HOSTS
            value: .scanterra.com
          - name: KOBOFORM_SERVER_NAME
            value: cloneprod.scancollect-form-edit.scanterra.com
          - name: KOBOCAT_SERVER_NAME
            value: cloneprod.scancollect.scanterra.com
          - name: ENKETO_SERVER_NAME
            value: cloneprod.scancollect-form.scanterra.com
          - name: TEMPLATE_DEBUG
            value: False
          # web server settings
          - name: KPI_WEB_SERVER
            value: uWSGI
          - name: KOBOCAT_WEB_SERVER
            value: uWSGI
          - name: KOBOCAT_STATIC_FILES_SERVER
            value: Nginx
          - name: KPI_STATIC_FILES_SERVER
            value: Nginx
          - name: ENKETO_PROTOCOL
            value: https
          - name: ENKETO_VERSION
            value: Express
          - name: ENKETO_API_TOKEN
            value: enketoapitoken
          - name: DJANGO_SECRET_KEY
            value: DJANGO_SECRET_KEY
          # email settings
          - name: EMAIL_BACKEND
            value: django.core.mail.backends.smtp.EmailBackend
          - name: DEFAULT_FROM_EMAIL
            value: soporte@scanterra.com
          - name: CELERYD_TASK_TIME_LIMIT
            value: 9000
          - name: CELERYD_TASK_SOFT_TIME_LIMIT
            value: 7200
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: kobo-postgres-btsync
  name: kobo-postgres-btsync
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kobo-postgres-btsync
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: kobo-postgres-btsync
    spec:
      containers:
      - name: kobo-postgres-btsync
        image: scanterra/btsync:rancher
        imagePullPolicy: Always
        env:
          - name: DEVICE
            value: ScanTerra Production - Kobo Postgres
          - name: SECRET
            value: APWDOMOXQCE74MVVJJFDWXD5YFMDS4VNC
          - name: STANDBY_MODE
            value: "TRUE"
        volumeMounts:
          - mountPath: /web
            name: backups-postgres
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: backups-postgres
          persistentVolumeClaim:
            claimName: backups-postgres
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: kobocat
  name: kobocat
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kobocat
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: kobocat
    spec:
      initContainers:
      - command:
        - sh
        - -c
        - until nslookup postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local;
          do echo waiting for postgres; sleep 2; done
        image: busybox:1.28
        name: init-postgres
      - command:
        - sh
        - -c
        - until nslookup kpi.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local;
          do echo waiting for kpi; sleep 5; done
        image: busybox:1.28
        name: init-kpi
      containers:
      - name: kobocat
        image: scanterra/kobotoolbox_kobocat:2.018.31
        imagePullPolicy: Always
        env:
            # apps
          - name: KOBO_SUPERUSER_USERNAME
            value: kobo_superadmin
          - name: KOBO_SUPERUSER_PASSWORD
            value: KOBO_SUPERUSER_PASSWORD
          - name: KOBO_SUPPORT_EMAIL
            value: soporte@scanterra.com
          - name: USE_ENV_VAR
            value: true
          - name: KOBOFORM_URL
            value: https://cloneprod.scancollect-form-edit.scanterra.com
          - name: KOBOCAT_URL
            value: https://cloneprod.scancollect.scanterra.com
          - name: ENKETO_URL
            value: https://cloneprod.scancollect-form.scanterra.com
          - name: CSRF_COOKIE_DOMAIN
            value: .scanterra.com
          - name: DJANGO_ALLOWED_HOSTS
            value: .scanterra.com
          - name: KOBOFORM_SERVER_NAME
            value: cloneprod.scancollect-form-edit.scanterra.com
          - name: KOBOCAT_SERVER_NAME
            value: cloneprod.scancollect.scanterra.com
          - name: ENKETO_SERVER_NAME
            value: cloneprod.scancollect-form.scanterra.com
          - name: TEMPLATE_DEBUG
            value: False
          # web server settings
          - name: KPI_WEB_SERVER
            value: uWSGI
          - name: KOBOCAT_WEB_SERVER
            value: uWSGI
          - name: KOBOCAT_STATIC_FILES_SERVER
            value: Nginx
          - name: KPI_STATIC_FILES_SERVER
            value: Nginx
          - name: ENKETO_PROTOCOL
            value: https
          - name: ENKETO_VERSION
            value: Express
          - name: ENKETO_API_TOKEN
            value: enketoapitoken
          - name: DJANGO_SECRET_KEY
            value: DJANGO_SECRET_KEY
          # email settings
          - name: EMAIL_BACKEND
            value: django.core.mail.backends.smtp.EmailBackend
          - name: DEFAULT_FROM_EMAIL
            value: soporte@scanterra.com
          - name: CELERYD_TASK_TIME_LIMIT
            value: 9000
          - name: CELERYD_TASK_SOFT_TIME_LIMIT
            value: 7200
          - name: POSTGRES_BACKUP_SCHEDULE
            value: 0 2 * * 0
          - name: POSTGRES_BACKUP_ARCHIVE_FILENAME
            value: postgres_backup_kobotoolbox.pg_restore
          - name: MONGO_BACKUP_SCHEDULE
            value: 0 1 * * 0
          - name: MONGO_BACKUP_ARCHIVE_FILENAME
            value: mongo_backup.mongorestore.tar.gz
          - name: KOBOCAT_MEDIA_BACKUP_SCHEDULE
            value: 0 0 * * 0
          - name: DJANGO_SETTINGS_MODULE
            value: onadata.settings.kc_environ
          - name: KOBOCAT_DJANGO_DEBUG
            value: false
          - name: DATABASE_URL
            value: postgis://kobo_superadmin:j3cA6eCIneo5nU5qjK8yXycalu9B2I41@postgres:5432/kobotoolbox
          - name: KOBO_POSTGRES_DB_NAME
            value: kobotoolbox
          - name: KOBO_POSTGRES_USER
            value: kobo_superadmin
          - name: KOBOCAT_BROKER_URL
            value: amqp://kobocat:kobocat@rabbit:5672/kobocat
        volumeMounts:
          - mountPath: /srv/backups
            name: backups-kobocat
          - mountPath: /srv/logs
            name: log-kobocat
          - mountPath: /srv/src/kobocat/media
            name: vols-kobocatmedia
          - mountPath: /srv/static
            name: vols-static-kobocat
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: backups-kobocat
          persistentVolumeClaim:
            claimName: backups-kobocat
        - name: log-kobocat
          persistentVolumeClaim:
            claimName: log-kobocat
        - name: vols-kobocatmedia
          persistentVolumeClaim:
            claimName: vols-kobocatmedia
        - name: vols-static-kobocat
          persistentVolumeClaim:
            claimName: vols-static-kobocat
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: kobocat-btsync
  name: kobocat-btsync
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kobocat-btsync
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: kobocat-btsync
    spec:
      containers:
      - name: kobocat-btsync
        image: scanterra/btsync:rancher
        imagePullPolicy: Always
        env:
          - name: DEVICE
            value: ScanTerra Production - Kobocat
          - name: SECRET
            value: AW2VPXUMLCCPRRT6K53WEOUHT2HZCPVL3
          - name: STANDBY_MODE
            value: "TRUE"
        volumeMounts:
          - mountPath: /web
            name: backups-kobocat
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: backups-kobocat
          persistentVolumeClaim:
            claimName: backups-kobocat
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: kpi
  name: kpi
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kpi
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: kpi
    spec:
      initContainers:
      - command:
        - sh
        - -c
        - until nslookup postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local;
          do echo waiting for postgres; sleep 2; done
        image: busybox:1.28
        name: init-postgres
      containers:
      - name: kpi
        image: scanterra/kobotoolbox_kpi:develop
        imagePullPolicy: Always
        env:
            # apps
          - name: KOBO_SUPERUSER_USERNAME
            value: kobo_superadmin
          - name: KOBO_SUPERUSER_PASSWORD
            value: KOBO_SUPERUSER_PASSWORD
          - name: KOBO_SUPPORT_EMAIL
            value: soporte@scanterra.com
          - name: USE_ENV_VAR
            value: true
          - name: KOBOFORM_URL
            value: https://cloneprod.scancollect-form-edit.scanterra.com
          - name: KOBOCAT_URL
            value: https://cloneprod.scancollect.scanterra.com
          - name: ENKETO_URL
            value: https://cloneprod.scancollect-form.scanterra.com
          - name: CSRF_COOKIE_DOMAIN
            value: .scanterra.com
          - name: DJANGO_ALLOWED_HOSTS
            value: .scanterra.com
          - name: KOBOFORM_SERVER_NAME
            value: cloneprod.scancollect-form-edit.scanterra.com
          - name: KOBOCAT_SERVER_NAME
            value: cloneprod.scancollect.scanterra.com
          - name: ENKETO_SERVER_NAME
            value: cloneprod.scancollect-form.scanterra.com
          - name: TEMPLATE_DEBUG
            value: False
          # web server settings
          - name: KPI_WEB_SERVER
            value: uWSGI
          - name: KOBOCAT_WEB_SERVER
            value: uWSGI
          - name: KOBOCAT_STATIC_FILES_SERVER
            value: Nginx
          - name: KPI_STATIC_FILES_SERVER
            value: Nginx
          - name: ENKETO_PROTOCOL
            value: https
          - name: ENKETO_VERSION
            value: Express
          - name: ENKETO_API_TOKEN
            value: enketoapitoken
          - name: DJANGO_SECRET_KEY
            value: DJANGO_SECRET_KEY
          # email settings
          - name: EMAIL_BACKEND
            value: django.core.mail.backends.smtp.EmailBackend
          - name: DEFAULT_FROM_EMAIL
            value: soporte@scanterra.com
          - name: CELERYD_TASK_TIME_LIMIT
            value: 9000
          - name: CELERYD_TASK_SOFT_TIME_LIMIT
            value: 7200
          - name: KPI_DJANGO_DEBUG
            value: false
          - name: KPI_PREFIX
            value: /
          - name: KPI_BROKER_URL
            value: amqp://kpi:kpi@rabbit:5672/kpi
          - name: DATABASE_URL
            value: postgres://kobo_superadmin:j3cA6eCIneo5nU5qjK8yXycalu9B2I41@postgres:5432/kobotoolbox
          - name: DJANGO_LANGUAGE_CODES
            value: en fr es ar zh-hans hi ku
          - name: SECURE_PROXY_SSL_HEADER
            value: HTTP_X_FORWARDED_PROTO, https
        volumeMounts:
          - mountPath: /srv/logs
            name: log-kpi
          - mountPath: /srv/src/kobocat/media
            name: vols-kobocatmedia
          - mountPath: /srv/src/kpi/media
            name: vols-kpimedia
          - mountPath: /srv/static
            name: vols-static-kpi
          - mountPath: /srv/whoosh
            name: vols-whoosh
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: log-kpi
          persistentVolumeClaim:
            claimName: log-kpi
        - name: vols-kobocatmedia
          persistentVolumeClaim:
            claimName: vols-kobocatmedia
        - name: vols-kpimedia
          persistentVolumeClaim:
            claimName: vols-kpimedia
        - name: vols-static-kpi
          persistentVolumeClaim:
            claimName: vols-static-kpi
        - name: vols-whoosh
          persistentVolumeClaim:
            claimName: vols-whoosh
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: mongo
    spec:
      containers:
      - name: mongo
        image: scanterra/kobotoolbox_mongo:latest
        imagePullPolicy: Always
        env:
          - name: MONGO_BACKUP_ARCHIVE_FILENAME
            value: mongo_backup.mongorestore.tar.gz
          - name: MONGO_BACKUP_SCHEDULE
            value: 0 1 * * 0
          - name: MONGO_DATA
            value: /srv/db
          - name: POSTGRES_BACKUP_ARCHIVE_FILENAME
            value: postgres_backup_kobotoolbox.pg_restore
          - name: POSTGRES_BACKUP_SCHEDULE
            value: 0 2 * * 0
        volumeMounts:
          - mountPath: /srv/backups
            name: backups-mongo
          - mountPath: /srv/db
            name: vols-mongo
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: backups-mongo
          persistentVolumeClaim:
            claimName: backups-mongo
        - name: vols-mongo
          persistentVolumeClaim:
            claimName: vols-mongo
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: mongo-btsync
  name: mongo-btsync
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo-btsync
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: mongo-btsync
    spec:
      containers:
      - name: mongo-btsync
        image: scanterra/btsync:rancher
        imagePullPolicy: Always
        env:
          - name: DEVICE
            value: ScanTerra Production - Mongo
          - name: SECRET
            value: ATCAWOQEHQJIGF6SLXUBL3BE6D2ZP3JF7
          - name: STANDBY_MODE
            value: "TRUE"
        volumeMounts:
          - mountPath: /web
            name: backups-mongo
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: backups-mongo
          persistentVolumeClaim:
            claimName: backups-mongo
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: nginx
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nginx
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: nginx
    spec:
      containers:
      - name: nginx
        image: scanterra/kobotoolbox_nginx:k8-deploy
        imagePullPolicy: Always
        env:
            # apps
          - name: KOBO_SUPERUSER_USERNAME
            value: kobo_superadmin
          - name: KOBO_SUPERUSER_PASSWORD
            value: KOBO_SUPERUSER_PASSWORD
          - name: KOBO_SUPPORT_EMAIL
            value: soporte@scanterra.com
          - name: USE_ENV_VAR
            value: true
          - name: KOBOFORM_URL
            value: https://cloneprod.scancollect-form-edit.scanterra.com
          - name: KOBOCAT_URL
            value: https://cloneprod.scancollect.scanterra.com
          - name: ENKETO_URL
            value: https://cloneprod.scancollect-form.scanterra.com
          - name: CSRF_COOKIE_DOMAIN
            value: .scanterra.com
          - name: DJANGO_ALLOWED_HOSTS
            value: .scanterra.com
          - name: KOBOFORM_SERVER_NAME
            value: cloneprod.scancollect-form-edit.scanterra.com
          - name: KOBOCAT_SERVER_NAME
            value: cloneprod.scancollect.scanterra.com
          - name: ENKETO_SERVER_NAME
            value: cloneprod.scancollect-form.scanterra.com
          - name: TEMPLATE_DEBUG
            value: False
          # web server settings
          - name: KPI_WEB_SERVER
            value: uWSGI
          - name: KOBOCAT_WEB_SERVER
            value: uWSGI
          - name: KOBOCAT_STATIC_FILES_SERVER
            value: Nginx
          - name: KPI_STATIC_FILES_SERVER
            value: Nginx
          - name: ENKETO_PROTOCOL
            value: https
          - name: ENKETO_VERSION
            value: Express
          - name: ENKETO_API_TOKEN
            value: enketoapitoken
          - name: DJANGO_SECRET_KEY
            value: DJANGO_SECRET_KEY
          # email settings
          - name: EMAIL_BACKEND
            value: django.core.mail.backends.smtp.EmailBackend
          - name: DEFAULT_FROM_EMAIL
            value: soporte@scanterra.com
          - name: CELERYD_TASK_TIME_LIMIT
            value: 9000
          - name: CELERYD_TASK_SOFT_TIME_LIMIT
            value: 7200
          - name: NGINX_CONFIG_FILE_NAME
            value: nginx_site_http.conf
          - name: TEMPLATED_VAR_REFS
            value: scanterra.com cloneprod.scancollect-form-edit cloneprod.scancollect cloneprod.scancollect-form
        volumeMounts:
          - mountPath: /var/log/nginx
            name: log-nginx
          - mountPath: /tmp/kobo_toolbox_secrets/
            name: secrets
          - mountPath: /srv/src/kpi/media
            name: vols-kpimedia
          - mountPath: /srv/www/kobocat
            name: vols-static-kobocat
          - mountPath: /srv/www/kpi
            name: vols-static-kpi
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: log-nginx
          persistentVolumeClaim:
            claimName: log-nginx
        - name: secrets
          persistentVolumeClaim:
            claimName: secrets
        - name: vols-kpimedia
          persistentVolumeClaim:
            claimName: vols-kpimedia
        - name: vols-static-kobocat
          persistentVolumeClaim:
            claimName: vols-static-kobocat
        - name: vols-static-kpi
          persistentVolumeClaim:
            claimName: vols-static-kpi
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: postgres
    spec:
      containers:
      - name: postgres
        image: scanterra/postgis:9.6-2.4
        imagePullPolicy: Always
        env:
          - name: ALLOW_IP_RANGE
            value: 0.0.0.0/0
          - name: POSTGRES_DBNAME
            value: kobotoolbox
          - name: POSTGRES_PASSWORD
            value: j3cA6eCIneo5nU5qjK8yXycalu9B2I41
          - name: POSTGRES_USER
            value: kobo_superadmin
        volumeMounts:
          - mountPath: /srv/backups
            name: backups-postgres
          - mountPath: /var/lib/postgresql
            name: vols-db
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: backups-postgres
          persistentVolumeClaim:
            claimName: backups-postgres
        - name: vols-db
          persistentVolumeClaim:
            claimName: vols-db
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: rabbit
  name: rabbit
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbit
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: rabbit
    spec:
      containers:
      - name: rabbit
        image: scanterra/kobotoolbox_rabbit:latest
        imagePullPolicy: Always
        env:
          - name: RABBITMQ_LOG_BASE
            value: /var/log/rabbitmq
        volumeMounts:
          - mountPath: /var/log/rabbitmq
            name: log-rabbitmq
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: log-rabbitmq
          persistentVolumeClaim:
            claimName: log-rabbitmq
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: redis-cache
  name: redis-cache
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis-cache
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: redis-cache
    spec:
      containers:
      - name: redis-cache
        image: scanterra/kobotoolbox_redis_cache:2.6
        imagePullPolicy: Always
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: redis-main
  name: redis-main
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis-main
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: redis-main
    spec:
      containers:
      - name: redis-main
        image: scanterra/kobotoolbox_redis_main:2.6
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: /data/
            name: vols-redismaindata
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: vols-redismaindata
          persistentVolumeClaim:
            claimName: vols-redismaindata
status: {}
---
# Source: basic-test/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: smtp
  name: smtp
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: smtp
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: smtp
    spec:
      containers:
      - name: smtp
        image: catatnight/postfix
        imagePullPolicy: Always
        env:
          - name: maildomain
            value: scanterra.com
          - name: smtp_user
            value: noreply:docker
      imagePullSecrets:
        - name: dockerhub
      restartPolicy: Always
      serviceAccountName: ""
status: {}
